##!/bin/bash
##################################################################
# Script       # gather_nodes_details
# Description  # gather and format node data for Must-gather collection
# @VERSION     # 0.1.0
##################################################################

# Variables
BASE_COLLECTION_PATH="must-gather"
DESCRIBE_LOG_PATH=${OUT:-"${BASE_COLLECTION_PATH}/describe_nodes"}
DESCRIBE_OUT=${DESCRIBE_LOG_PATH}/nodes_describes.txt
OC=${OC:-"oc"}

# Create folder
mkdir -p ${DESCRIBE_LOG_PATH}

# Collect the "oc describe node" in a single file to allow data extraction
${OC} describe nodes > ${DESCRIBE_OUT}

# Extract and format the "oc describe node" to create a table with the resource overcommitment status
awk 'BEGIN{printf "%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s\n","NODENAME","Allocatable CPU","Allocatable MEM","Request CPU","(%)","Limit CPU","(%)","Request MEM","(%)","Limit MEM","(%)"}
{
  if($1 == "Name:"){name=$2};
  if($1 ~ "Allocatable:"){
    while($1 != "System"){
      if($1 == "cpu:"){Alloc_cpu=$2};
      if($1 == "memory:"){Alloc_mem=$2};getline
    }
  };
  if($1 == "Resource"){
    while($1 != "Events:"){
      if($1 == "cpu"){req_cpu=$2;preq_cpu=$3;lim_cpu=$4;plim_cpu=$5};
      if($1 == "memory"){req_mem=$2;preq_mem=$3;lim_mem=$4;plim_mem=$5};
      getline};
    printf "%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s\n",name,Alloc_cpu,Alloc_mem,req_cpu,preq_cpu,lim_cpu,plim_cpu,req_mem,preq_mem,lim_mem,plim_mem}
}' ${DESCRIBE_OUT} | column -s'|' -t > ${DESCRIBE_LOG_PATH}/nodes_overcommitement.txt

# Collect and format node details in a table
${OC} get nodes -o json | jq -r '
  "|CPU||Memory||ephemeral-storage|||||Conditions||||\nNodename|Capacity|Allocatable|Capacity|Allocatable|Capacity|Allocatable|pods|hugepages-1Gi|hugepages-2Mi|MemoryPressure|DiskPressure|PIDPressure|Ready|Taints",
  (.items | sort_by(.metadata.name)|.[]|
  "\(.metadata.name)|\(.status.capacity.cpu)|\(.status.allocatable.cpu)|\(.status.capacity.memory)|\(.status.allocatable.memory)|\(.status.capacity."ephemeral-storage")|\((.status.allocatable."ephemeral-storage"|tonumber)/1024|round)Ki|\(.status.capacity.pods)|\(.status.capacity."hugepages-1Gi")|\(.status.capacity."hugepages-2Mi")|\(.status.conditions[]|select(.type == "MemoryPressure")|.status)|\(.status.conditions[]|select(.type == "DiskPressure")|.status)|\(.status.conditions[]|select(.type == "PIDPressure")|.status)|\(.status.conditions[]|select(.type == "Ready")|.status)|\(if(.spec.taints != null) then [.spec.taints[]] else "null" end)"
  )'| column -s'|' -t > ${DESCRIBE_LOG_PATH}/nodes_details.txt

# Collect and format the systemReserved from the kubeletconfig objects
KUBELETCONFIG=$(${OC} get kubeletconfig -o json | grep -Ev "^$|^No resources" | jq -r 'if(.items == null) then null elif (.items != []) then .  else null end')
if [[ "${KUBELETCONFIG}" != "null" ]] && [[ "${KUBELETCONFIG}" != "" ]]
then
  echo "${KUBELETCONFIG}" | jq -r '
    "Name|autoSizingReserved|cpu|memory|ephemeral-resource|MCP Label(s)",
    (
      if (.items == null) then
        (.[]|"\(.metadata.name)|\(.spec | if((.autoSizingReserved == null) or (.autoSizingReserved == false)) then false else true end)|\(.spec |if(.kubeletConfig != null and .kubeletConfig.systemReserved != null)then (.kubeletConfig.systemReserved | if(.cpu != null) then .cpu else "-" end) else "-" end)|\(.spec |if(.kubeletConfig != null and .kubeletConfig.systemReserved != null)then (.kubeletConfig.systemReserved | if(.memory != null) then .memory else "-" end) else "-" end)|\(.spec |if(.kubeletConfig != null and .kubeletConfig.systemReserved != null)then (.kubeletConfig.systemReserved | if(."ephemeral-storage" != null) then ."ephemeral-storage" else "-" end) else "-" end)|\(.spec.machineConfigPoolSelector.matchLabels | [to_entries[] | (.key | split("/") | if(.[0] == "pools.operator.machineconfiguration.openshift.io") then .[1] else .[0] end) + (if (.value != "") then ": \"\(.value)\"" else "" end) ])")
      else
        (.items[]|"\(.metadata.name)|\(.spec | if((.autoSizingReserved == null) or (.autoSizingReserved == false)) then false else true end)|\(.spec |if(.kubeletConfig != null and .kubeletConfig.systemReserved != null)then (.kubeletConfig.systemReserved | if(.cpu != null) then .cpu else "-" end) else "-" end)|\(.spec |if(.kubeletConfig != null and .kubeletConfig.systemReserved != null)then (.kubeletConfig.systemReserved | if(.memory != null) then .memory else "-" end) else "-" end)|\(.spec |if(.kubeletConfig != null and .kubeletConfig.systemReserved != null)then (.kubeletConfig.systemReserved | if(."ephemeral-storage" != null) then ."ephemeral-storage" else "-" end) else "-" end)|\(.spec.machineConfigPoolSelector.matchLabels | [to_entries[] | (.key | split("/") | if(.[0] == "pools.operator.machineconfiguration.openshift.io") then .[1] else .[0] end) + (if (.value != "") then ": \"\(.value)\"" else "" end) ])"
        )
      end
    )' | column -t -s'|' > ${DESCRIBE_LOG_PATH}/nodes_systemReserved.txt
fi